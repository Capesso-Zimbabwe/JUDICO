# Generated by Django 5.2.3 on 2025-08-19 10:54

import django.core.validators
import django.db.models.deletion
import transaction_support.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('client_management', '0005_alter_client_code_case_casedocument_caseupdate'),
        ('contract_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DueDiligenceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='transaction_support.duediligencecategory')),
            ],
            options={
                'verbose_name_plural': 'Due Diligence Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default=transaction_support.models.generate_transaction_code, editable=False, max_length=20, unique=True)),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('transaction_type', models.CharField(choices=[('merger', 'Merger'), ('acquisition', 'Acquisition'), ('financing', 'Financing'), ('restructuring', 'Restructuring'), ('joint_venture', 'Joint Venture'), ('ipo', 'Initial Public Offering'), ('divestiture', 'Divestiture'), ('spin_off', 'Spin-off'), ('asset_purchase', 'Asset Purchase'), ('share_purchase', 'Share Purchase'), ('debt_restructuring', 'Debt Restructuring'), ('other', 'Other')], max_length=50)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('due_diligence', 'Due Diligence'), ('negotiation', 'Negotiation'), ('documentation', 'Documentation'), ('regulatory_approval', 'Regulatory Approval'), ('closing', 'Closing'), ('post_closing', 'Post-Closing'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='planning', max_length=30)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('transaction_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('target_closing_date', models.DateField(blank=True, null=True)),
                ('actual_closing_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_confidential', models.BooleanField(default=True)),
                ('regulatory_approvals_required', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_transactions', to=settings.AUTH_USER_MODEL)),
                ('lead_lawyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_transactions', to=settings.AUTH_USER_MODEL)),
                ('primary_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_transactions', to='client_management.client')),
                ('related_cases', models.ManyToManyField(blank=True, related_name='transactions', to='client_management.case')),
                ('related_contracts', models.ManyToManyField(blank=True, related_name='transactions', to='contract_management.contract')),
                ('team_members', models.ManyToManyField(blank=True, related_name='transaction_teams', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'permissions': [('view_confidential_transaction', 'Can view confidential transactions'), ('manage_transaction_team', 'Can manage transaction team')],
            },
        ),
        migrations.CreateModel(
            name='ContractReassignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reassignment_date', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_reassignments', to=settings.AUTH_USER_MODEL)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reassignments', to='contract_management.contract')),
                ('new_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reassigned_contracts', to='client_management.client')),
                ('new_lawyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_contract_assignments', to=settings.AUTH_USER_MODEL)),
                ('original_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='original_contracts', to='client_management.client')),
                ('original_lawyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='original_contract_assignments', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_reassignments', to='transaction_support.transaction')),
            ],
            options={
                'ordering': ['-reassignment_date'],
            },
        ),
        migrations.CreateModel(
            name='TransactionDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True)),
                ('document_type', models.CharField(choices=[('due_diligence', 'Due Diligence'), ('financial_statement', 'Financial Statement'), ('legal_opinion', 'Legal Opinion'), ('contract', 'Contract'), ('regulatory_filing', 'Regulatory Filing'), ('board_resolution', 'Board Resolution'), ('shareholder_agreement', 'Shareholder Agreement'), ('disclosure_schedule', 'Disclosure Schedule'), ('closing_document', 'Closing Document'), ('post_closing', 'Post-Closing Document'), ('other', 'Other')], max_length=30)),
                ('access_level', models.CharField(choices=[('public', 'Public'), ('team_only', 'Team Only'), ('lead_only', 'Lead Lawyer Only'), ('confidential', 'Confidential')], default='team_only', max_length=20)),
                ('document_file', models.FileField(upload_to='transactions/documents/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'xls', 'xlsx', 'txt'])])),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_hash', models.CharField(blank=True, max_length=64)),
                ('version', models.PositiveIntegerField(default=1)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('due_diligence_categories', models.ManyToManyField(blank=True, to='transaction_support.duediligencecategory')),
                ('parent_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='transaction_support.transactiondocument')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_documents', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='transaction_support.transaction')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
                'permissions': [('access_confidential_documents', 'Can access confidential documents')],
            },
        ),
        migrations.CreateModel(
            name='TransactionEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('acquirer', 'Acquirer'), ('target', 'Target'), ('subsidiary', 'Subsidiary'), ('parent', 'Parent Company'), ('joint_venture_partner', 'Joint Venture Partner'), ('lender', 'Lender'), ('borrower', 'Borrower'), ('guarantor', 'Guarantor'), ('advisor', 'Advisor'), ('other', 'Other')], max_length=30)),
                ('ownership_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('notes', models.TextField(blank=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_roles', to='client_management.client')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entities', to='transaction_support.transaction')),
            ],
            options={
                'unique_together': {('transaction', 'client', 'role')},
            },
        ),
        migrations.CreateModel(
            name='EntityOwnershipHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_ownership', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('new_ownership', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('change_date', models.DateTimeField(auto_now_add=True)),
                ('change_reason', models.TextField()),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ownership_history', to='transaction_support.transactionentity')),
            ],
            options={
                'ordering': ['-change_date'],
            },
        ),
        migrations.CreateModel(
            name='TransactionReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('status', 'Status Report'), ('due_diligence', 'Due Diligence Report'), ('financial', 'Financial Summary'), ('risk_assessment', 'Risk Assessment'), ('compliance', 'Compliance Report'), ('closing', 'Closing Report'), ('post_closing', 'Post-Closing Report'), ('audit', 'Audit Report'), ('custom', 'Custom Report')], max_length=20)),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True)),
                ('report_data', models.JSONField()),
                ('report_file', models.FileField(blank=True, null=True, upload_to='transactions/reports/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'xls', 'xlsx'])])),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('is_confidential', models.BooleanField(default=True)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='accessible_reports', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='transaction_support.transaction')),
            ],
            options={
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('transaction_type', models.CharField(choices=[('merger', 'Merger'), ('acquisition', 'Acquisition'), ('financing', 'Financing'), ('restructuring', 'Restructuring'), ('joint_venture', 'Joint Venture'), ('ipo', 'Initial Public Offering'), ('divestiture', 'Divestiture'), ('spin_off', 'Spin-off'), ('asset_purchase', 'Asset Purchase'), ('share_purchase', 'Share Purchase'), ('debt_restructuring', 'Debt Restructuring'), ('other', 'Other')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('is_template', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['transaction_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TransactionTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True)),
                ('task_type', models.CharField(choices=[('due_diligence', 'Due Diligence'), ('approval', 'Approval'), ('filing', 'Regulatory Filing'), ('documentation', 'Documentation'), ('closing', 'Closing'), ('post_closing', 'Post-Closing'), ('milestone', 'Milestone'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('overdue', 'Overdue')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('progress_percentage', models.PositiveIntegerField(default=0)),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_transaction_tasks', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_transaction_tasks', to=settings.AUTH_USER_MODEL)),
                ('depends_on', models.ManyToManyField(blank=True, related_name='dependent_tasks', to='transaction_support.transactiontask')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='transaction_support.transaction')),
                ('workflow', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transaction_support.transactionworkflow')),
            ],
            options={
                'ordering': ['due_date', 'priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('create', 'Created'), ('update', 'Updated'), ('delete', 'Deleted'), ('view', 'Viewed'), ('download', 'Downloaded'), ('upload', 'Uploaded'), ('approve', 'Approved'), ('reject', 'Rejected'), ('assign', 'Assigned'), ('complete', 'Completed'), ('comment', 'Commented'), ('status_change', 'Status Changed'), ('other', 'Other')], max_length=20)),
                ('object_type', models.CharField(max_length=50)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('old_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='transaction_support.transaction')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['transaction', 'timestamp'], name='transaction_transac_e9f062_idx'), models.Index(fields=['user', 'timestamp'], name='transaction_user_id_4e7252_idx'), models.Index(fields=['action_type', 'timestamp'], name='transaction_action__80ba46_idx')],
            },
        ),
    ]
